{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./api/todos/getAllTodos.js","webpack:///./db/index.js","webpack:///./handler.js","webpack:///./models/Todo.js","webpack:///external \"babel-runtime/core-js/json/stringify\"","webpack:///external \"babel-runtime/core-js/promise\"","webpack:///external \"mongoose\"","webpack:///external \"source-map-support/register\""],"names":["renderServerError","response","errorMessage","statusCode","headers","body","success","error","getAllTodos","event","context","callback","callbackWaitsForEmptyEventLoop","queryStringParameters","userId","then","console","log","Todo","find","data","catch","mongoose","Promise","global","isConnected","dbConnection","resolve","connect","db","connections","readyState","processTodos","require","TodoSchema","Schema","title","String","description","dueDate","Date","model"],"mappings":"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","file":"handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./handler.js\");\n","import mongoose from 'mongoose';\n\nimport connectToDatabase from '../../db';\nimport Todo from '../../models/Todo';\n\nconst renderServerError = (response, errorMessage) => response(null, {\n  statusCode: 500,\n  headers: { 'Content-Type': 'application/json' },\n  body: { success: false, error: errorMessage },\n});\n\nexport const getAllTodos = (event, context, callback) => {\n  context.callbackWaitsForEmptyEventLoop = false;\n\n  const { userId } = event.queryStringParameters || {};\n  connectToDatabase().then(() => {\n    console.log('Database connection done');\n    Todo.find({ userId }, (error, data) => {\n      console.log('Result', data);\n      callback(null, { statusCode: 200, headers: { 'Content-Type' : 'application/json' }, body: JSON.stringify(data) })\n    });\n  })\n  .catch(() => renderServerError(callback, 'Unable to fetch todos! Try again later'));\n}\n","import mongoose from 'mongoose';\n\nmongoose.Promise = global.Promise;\nlet isConnected;\n\nconst dbConnection = () => {\n  if (isConnected) {\n    console.log('=> From Existing DB connection');\n    return Promise.resolve();\n  }\n\n  console.log('=> Using new DB connection');\n  return mongoose.connect(\"mongodb://prasanna1211:hellomid125@cluster0-shard-00-00-m5ypw.mongodb.net:27017,cluster0-shard-00-01-m5ypw.mongodb.net:27017,cluster0-shard-00-02-m5ypw.mongodb.net:27017/test?ssl=true&replicaSet=Cluster0-shard-0&authSource=admin\")\n    .then(db => { \n      console.log('Connected : ' + db.connections[0].readyState);\n      isConnected = db.connections[0].readyState;\n    });\n};\n\nexport default dbConnection;","import { getAllTodos } from './api/todos/getAllTodos';\nimport { processTodos } from './api/todos/processTodos';\n\nexport {\n  getAllTodos,\n  processTodos,\n}","const mongoose = require('mongoose');\n\nconst TodoSchema = new mongoose.Schema({  \n  title: String,\n  description: String,\n  dueDate: Date,\n  userId: String,\n});\n\nexport default mongoose.model('Todo', TodoSchema);","module.exports = require(\"babel-runtime/core-js/json/stringify\");","module.exports = require(\"babel-runtime/core-js/promise\");","module.exports = require(\"mongoose\");","module.exports = require(\"source-map-support/register\");"],"sourceRoot":""}