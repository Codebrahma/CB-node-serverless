{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./api/todos/getGroceries.js","webpack:///./api/todos/getGrocery.js","webpack:///./api/todos/index.js","webpack:///./handler.js","webpack:///external \"aws-sdk\"","webpack:///external \"babel-runtime/core-js/json/stringify\"","webpack:///external \"mongoose\"","webpack:///external \"source-map-support/register\""],"names":["AWS","config","update","region","endpoint","renderServerError","response","errorMessage","statusCode","headers","body","success","error","getResponse","data","getGroceries","event","context","callback","callbackWaitsForEmptyEventLoop","documentClient","DynamoDB","DocumentClient","category","queryStringParameters","params","TableName","ExpressionAttributeNames","ExpressionAttributeValues","FilterExpression","ProjectionExpression","scan","err","console","log","getGrocery","Key","groceryId","id","get"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEA;;;;AACA;;;;;;AAEAA,iBAAIC,MAAJ,CAAWC,MAAX,CAAkB;AAChBC,UAAQ,YADQ;AAEhBC,YAAU;AAFM,CAAlB;;AAKA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,QAAD,EAAWC,YAAX;AAAA,SAA4BD,SAAS,IAAT,EAAe;AACnEE,gBAAY,GADuD;AAEnEC,aAAS,EAAE,gBAAgB,kBAAlB,EAF0D;AAGnEC,UAAM,EAAEC,SAAS,KAAX,EAAkBC,OAAOL,YAAzB;AAH6D,GAAf,CAA5B;AAAA,CAA1B;;AAMA,IAAMM,cAAc,SAAdA,WAAc,CAACC,IAAD,EAAU;AAC5B,SAAO;AACLN,gBAAY,GADP;AAELC,aAAS,EAAE,gBAAiB,kBAAnB,EAFJ;AAGLC,UAAM,yBAAeI,IAAf;AAHD,GAAP;AAKD,CAND;;AAQO,IAAMC,sCAAe,SAAfA,YAAe,CAACC,KAAD,EAAQC,OAAR,EAAiBC,QAAjB,EAA8B;AACxDD,UAAQE,8BAAR,GAAyC,KAAzC;;AAEA,MAAIC,iBAAiB,IAAIpB,iBAAIqB,QAAJ,CAAaC,cAAjB,EAArB;AACA,MAAMC,WAAWP,MAAMQ,qBAAN,CAA4BD,QAA7C;AACA,MAAIE,SAAS;AACXC,eAAY,SADD;AAEXC,8BAA0B;AACtB,oBAAc,WADQ;AAEtB,mBAAa,UAFS;AAGtB,sBAAgB,aAHM;AAItB,eAAS,MAJa;AAKtB,cAAQ;AALc,KAFf;AASXC,+BAA2B;AACzB,mBAAaL;AADY,KAThB;AAYXM,6CAZW;AAaXC,0BAAsB;AAbX,GAAb;AAeAV,iBAAeW,IAAf,CAAoBN,MAApB,EAA4B,UAASO,GAAT,EAAclB,IAAd,EAAoB;AAC9C,QAAIkB,GAAJ,EAAS;AACPC,cAAQC,GAAR,CAAYF,GAAZ;AACA3B,wBAAkBa,QAAlB,EAA4B,kCAA5B;AACD,KAHD,MAIK;AACHA,eAAS,IAAT,EAAeL,YAAYC,IAAZ,CAAf;AACD;AACF,GARD;AASD,CA7BM,C;;;;;;;;;;;;;;;;;;;;;;;;;ACtBP;;;;AACA;;;;;;AAEAd,iBAAIC,MAAJ,CAAWC,MAAX,CAAkB;AAChBC,UAAQ,YADQ;AAEhBC,YAAU;AAFM,CAAlB;;AAKA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,QAAD,EAAWC,YAAX;AAAA,SAA4BD,SAAS,IAAT,EAAe;AACnEE,gBAAY,GADuD;AAEnEC,aAAS,EAAE,gBAAgB,kBAAlB,EAF0D;AAGnEC,UAAM,EAAEC,SAAS,KAAX,EAAkBC,OAAOL,YAAzB;AAH6D,GAAf,CAA5B;AAAA,CAA1B;;AAMA,IAAMM,cAAc,SAAdA,WAAc,CAACC,IAAD,EAAU;AAC5B,SAAO;AACLN,gBAAY,GADP;AAELC,aAAS,EAAE,gBAAiB,kBAAnB,EAFJ;AAGLC,UAAM,yBAAeI,IAAf;AAHD,GAAP;AAKD,CAND;;AAQO,IAAMqB,kCAAa,SAAbA,UAAa,CAACnB,KAAD,EAAQC,OAAR,EAAiBC,QAAjB,EAA8B;AACtDD,UAAQE,8BAAR,GAAyC,KAAzC;;AAEA,MAAIC,iBAAiB,IAAIpB,iBAAIqB,QAAJ,CAAaC,cAAjB,EAArB;;AAEA,MAAIG,SAAS;AACXC,eAAY,SADD;AAEXU,SAAK;AACHC,iBAAWrB,MAAMQ,qBAAN,CAA4Bc;AADpC;AAFM,GAAb;;AAOAlB,iBAAemB,GAAf,CAAmBd,MAAnB,EAA2B,UAASO,GAAT,EAAclB,IAAd,EAAoB;AAC7C,QAAIkB,GAAJ,EAAS;AACPC,cAAQC,GAAR,CAAYF,GAAZ;AACA3B,wBAAkBa,QAAlB,EAA4B,kCAA5B;AACD,KAHD,MAIK;AACHA,eAAS,IAAT,EAAeL,YAAYC,IAAZ,CAAf;AACD;AACF,GARD;AASD,CArBM,C;;;;;;;;;;;;;;;;;;;;;ACtBP;;AACA;;QAGEqB,U,GAAAA,sB;QACApB,Y,GAAAA,0B;;;;;;;;;;;;;;;;;;;;;ACLF;;QAIEoB,U,GAAAA,iB;QACApB,Y,GAAAA,mB;;;;;;;;;;;ACLF,oC;;;;;;;;;;;ACAA,iE;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,wD","file":"handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./handler.js\");\n","import mongoose from 'mongoose';\nimport AWS from 'aws-sdk';\n\nAWS.config.update({\n  region: 'ap-south-1',\n  endpoint: 'http://localhost:8000',\n});\n\nconst renderServerError = (response, errorMessage) => response(null, {\n  statusCode: 500,\n  headers: { 'Content-Type': 'application/json' },\n  body: { success: false, error: errorMessage },\n});\n\nconst getResponse = (data) => {\n  return { \n    statusCode: 200, \n    headers: { 'Content-Type' : 'application/json' }, \n    body: JSON.stringify(data) \n  };\n}\n\nexport const getGroceries = (event, context, callback) => {\n  context.callbackWaitsForEmptyEventLoop = false;\n  \n  var documentClient = new AWS.DynamoDB.DocumentClient();\n  const category = event.queryStringParameters.category;\n  var params = {\n    TableName : 'grocery',\n    ExpressionAttributeNames: {\n        '#groceryId': 'groceryId',\n        '#category': 'category',\n        '#subCategory': 'subCategory',\n        '#name': 'name',\n        '#url': 'url',\n    },\n    ExpressionAttributeValues: {\n      ':category': category\n    },\n    FilterExpression: `#category = :category`,\n    ProjectionExpression: \"#groceryId, #category, #subCategory, #name, #url\",\n  };\n  documentClient.scan(params, function(err, data) {\n    if (err) {\n      console.log(err);\n      renderServerError(callback, 'Unable to fetch! Try again later');\n    }\n    else {\n      callback(null, getResponse(data));\n    }\n  });\n}\n\n\n\n","import mongoose from 'mongoose';\nimport AWS from 'aws-sdk';\n\nAWS.config.update({\n  region: 'ap-south-1',\n  endpoint: 'http://localhost:8000',\n});\n\nconst renderServerError = (response, errorMessage) => response(null, {\n  statusCode: 500,\n  headers: { 'Content-Type': 'application/json' },\n  body: { success: false, error: errorMessage },\n});\n\nconst getResponse = (data) => {\n  return { \n    statusCode: 200, \n    headers: { 'Content-Type' : 'application/json' }, \n    body: JSON.stringify(data) \n  };\n}\n\nexport const getGrocery = (event, context, callback) => {\n  context.callbackWaitsForEmptyEventLoop = false;\n  \n  var documentClient = new AWS.DynamoDB.DocumentClient();\n  \n  var params = {\n    TableName : 'grocery',\n    Key: {\n      groceryId: event.queryStringParameters.id,\n    }\n  };\n\n  documentClient.get(params, function(err, data) {\n    if (err) {\n      console.log(err);\n      renderServerError(callback, 'Unable to fetch! Try again later');\n    }\n    else {\n      callback(null, getResponse(data));\n    }\n  });\n}\n\n\n\n","import { getGrocery } from './getGrocery';\nimport { getGroceries } from './getGroceries';\n\nexport {\n  getGrocery,\n  getGroceries,\n}","import { getGrocery } from './api/todos';\nimport { getGroceries } from './api/todos';\n\nexport { \n  getGrocery,\n  getGroceries,\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","module.exports = require(\"aws-sdk\");","module.exports = require(\"babel-runtime/core-js/json/stringify\");","module.exports = require(\"mongoose\");","module.exports = require(\"source-map-support/register\");"],"sourceRoot":""}